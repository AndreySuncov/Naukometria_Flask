name: Deploy Flask App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            REPO_DIR="/root/sci-metric.git"
            FRONTEND_DIR="/root/sciencemetrics-front"
            BUILD_DIR="/root/Naukometria_Flask"
          
            cd /root || exit
          
            # === СИНХРОНИЗАЦИЯ И PUSH ===
            UPDATE_FRONTEND=0
          
            if [ ! -d "$REPO_DIR" ]; then
              git clone --mirror https://devops.fa.ru/crpo/sci-metric.git "$REPO_DIR"
              cd "$REPO_DIR"
              git remote add github https://github.com/Redegit/sciencemetrics-front.git
              UPDATE_FRONTEND=1
            else
              cd "$REPO_DIR"
              git remote update
          
              LOCAL_HASH=$(git for-each-ref --format="%(objectname)" refs/remotes/origin/dev)
              REMOTE_HASH=$(git ls-remote origin refs/heads/dev | awk '{ print $1 }')
          
              if [ "$LOCAL_HASH" != "$REMOTE_HASH" ]; then
                UPDATE_FRONTEND=1
              fi
            fi
          
            if [ "$UPDATE_FRONTEND" = "1" ]; then
              echo "Changes detected, pushing and building frontend"
              git push --mirror github
          
              # === СБОРКА ФРОНТА ===
              rm -rf "$FRONTEND_DIR"
              git clone https://github.com/Redegit/sciencemetrics-front.git "$FRONTEND_DIR"
              cd "$FRONTEND_DIR"
              git checkout dev
              npm ci
              npm run build
          
              # === КОПИРОВАНИЕ dist ===
              rm -rf "$BUILD_DIR/dist"
              cp -r dist "$BUILD_DIR/"
            else
              echo "No changes in frontend. Skipping build."
            fi
          
            # === ВСЕГДА: БЭКЕНД ===
            cd "$BUILD_DIR"
            git pull origin main
            source /root/venv/bin/activate
            pip install -r requirements.txt
            sudo systemctl daemon-reload
            sudo systemctl restart flask-app
  

